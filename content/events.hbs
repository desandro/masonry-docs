---
title: Events
---

<div id="notification"></div>

<h2>Event binding</h2>

<h3>jQuery event binding</h3>

<p>Bind events with jQuery with standard jQuery event methods <code>.on()</code>, <code>.off()</code>, and <code>.one()</code>.</p>

``` js
// jQuery
var $grid = $('.grid').masonry({...});

function onLayout() {
  console.log('layout done');
}
// bind event listener
$grid.on( 'layoutComplete', onLayout );
// un-bind event listener
$grid.off( 'layoutComplete', onLayout );
// bind event listener to be triggered just once. note ONE not ON
$grid.one( 'layoutComplete', function() {
  console.log('layout done, just this one time');
});
```

<p>jQuery event listeners have an <code>event</code> argument, whereas vanilla JS listeners do not.</p>

``` js
// jQuery, has event argument
$grid.on( 'layoutComplete', function( event, items ) {
  console.log( items.length );
});

// vanilla JS, no event argument
msnry.on( 'layoutComplete', function( items ) {
  console.log( items.length );
});
```

{{! --------------------------------------------------- }}

<h3>Vanilla JS event binding</h3>

<p>Bind events with vanilla JS with <a href="methods.html#on">.on()</a>, <a href="methods.html#off">.off()</a>, and <a href="methods.html#once">.once()</a> methods.</p>

```js
// vanilla JS
var msnry = new Masonry( '.grid', {...});

function onLayout() {
  console.log('layout done');
}
// bind event listener
msnry.on( 'layoutComplete', onLayout );
// un-bind event listener
msnry.off( 'layoutComplete', onLayout );
// bind event listener to be triggered just once
msnry.once( 'layoutComplete', function() {
  console.log('layout done, just this one time');
});
```

{{! --------------------------------------------------- }}

<h2>Masonry events</h2>

{{! --------------------------------------------------- }}

<h3>layoutComplete</h3>

<p>Triggered after a layout and all positioning transitions have completed.</p>

``` js
// jQuery
$grid.on( 'layoutComplete', function( event, laidOutItems ) {...} )
// vanilla JS
msnry.on( 'layoutComplete', function( laidOutItems ) {...} )
```

<p class="argument">
  <code class="argument__code">laidOutItems</code>
  <span class="argument__type"><i>Array</i> of <i>Masonry.Item</i>s</span>
  <span class="argument__description">Items that were laid out</span>
</p>

<div class="duo example">
  <div class="duo__cell example__code">
    ``` js
    $grid.on( 'layoutComplete',
      function( event, laidOutItems ) {
        console.log( 'Masonry layout completed on ' +
          laidOutItems.length + ' items' );
      }
    );
    ```
  </div>
  {{> layout-complete-demo}}
</div>

{{! --------------------------------------------------- }}

<h3>removeComplete</h3>

<p>Triggered after an item element has been removed.</p>

``` js
// jQuery
$grid.on( 'removeComplete', function( event, removedItems ) {...} )
// vanilla JS
msnry.on( 'removeComplete', function( removedItems ) {...} )
```

<p class="argument">
  <code class="argument__code">removedItems</code>
  <span class="argument__type"><i>Array</i> of <i>Masonry.Item</i>s</span>
  <span class="argument__description">Items that were removed</span>
</p>

<div class="duo example">
  <div class="duo__cell example__code">
    ``` js
    $grid.on( 'removeComplete',
      function( event, removedItems ) {
        notify( 'Removed ' + removedItems.length + ' items' );
      }
    );
    ```
  </div>
  {{> remove-complete-demo}}
</div>
